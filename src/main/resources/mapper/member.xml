<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
           "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douzone.DAO.DouzoneDAO">

	<select id="get_count" resultType="string">
		SELECT code_count
		FROM
		generate_series(#{code_count}, 999999) AS code_count
		WHERE NOT EXISTS (
		SELECT 1
		FROM earner
		WHERE earner_code = lpad(code_count::text, 6, '0')
		AND worker_id = #{worker_id})
		LIMIT 1;
	</select>

	<select id="check_code" resultType="boolean">
		SELECT EXISTS (SELECT 1 FROM
		earner WHERE earner_code = #{custom_code} and worker_id =
		#{worker_id});
	</select>

	<select id="list_divcode" resultType="java.util.Map">
		SELECT
		div_code,div_name,div_type
		FROM codes
	</select>

	<select id="earner_list" resultType="java.util.Map">
		SELECT
		earner_code,earner_name,personal_no,is_native,div_code,div_name
		FROM
		earner
		WHERE worker_id = #{worker_id}
	</select>


	<select id="get_earner" resultType="com.douzone.entity.EarnerVO">
		SELECT *
		FROM earner
		WHERE
		earner_code = #{earner_code}
		AND worker_id = #{worker_id}
	</select>


	<insert id="earner_insert" useGeneratedKeys="true"
		keyProperty="earner_code">
		INSERT INTO earner (earner_code, worker_id, earner_name,
		div_code, div_name,
		personal_no, is_native)
		VALUES (#{earner_code},
		#{worker_id}, #{earner_name}, #{div_code},
		#{div_name}, #{personal_no},
		#{is_native})
	</insert>

	<update id="update_count">
		UPDATE worker
		SET code_count = CAST(#{earner_code} AS
		INTEGER)
		WHERE worker_id = #{worker_id}
	</update>



	<update id="earner_update">
		UPDATE earner
		SET ${param_name}=#{param_value}
		WHERE
		earner_code = #{earner_code}
		AND worker_id = #{worker_id}
	</update>

	<delete id="earner_delete">
		<foreach collection="earner_codes" item="earner_code">
			DELETE FROM earner_tax
			WHERE earner_code = #{earner_code}
			AND worker_id = #{worker_id};

			DELETE FROM earner
			WHERE earner_code = #{earner_code}
			AND worker_id =
			#{worker_id};
		</foreach>
	</delete>

	<select id="earner_search" resultType="java.util.Map">
		SELECT earner_code, earner_name, is_native, personal_no, div_name,
		div_code
		FROM earner
		WHERE worker_id = #{worker_id}
		<if test="search_value != null and search_value != ''">
			AND (earner_code::text ILIKE '%' || #{search_value} || '%'
			OR earner_name ILIKE '%' || #{search_value} || '%'
			OR div_code ILIKE
			'%' || #{search_value} || '%')
		</if>
	</select>


	<select id="get_earners" resultType="java.util.Map">
		<foreach collection="earner_codes" item="earner_code">
			SELECT earner_code,
			earner_name, is_native, personal_no, div_name, div_code
			FROM earner
			WHERE worker_id = #{worker_id}
			AND earner_code = #{earner_code}
		</foreach>
	</select>



	<select id="get_tax" resultType="com.douzone.entity.TaxInfoVO">
		SELECT e.worker_id,
		e.earner_code, e.is_tuition, e.deduction_amount, e.is_artist,
		e.ins_reduce,
		et.tax_id, et.tax_rate, et.ins_rate, et.total_payment,
		et.accrual_ym,
		et.payment_ym, et.payment_date
		FROM earner e
		INNER JOIN
		earner_tax et ON e.worker_id = et.worker_id AND e.earner_code =
		et.earner_code
		WHERE e.worker_id = #{worker_id}
		AND e.earner_code =
		#{earner_code}
		AND et.payment_ym = #{payment_ym}
	</select>


	<update id="tax_backup">
		UPDATE earner_tax
		SET
		tax_income = #{tax_income},
		tax_local = #{tax_local},
		tax_total = #{tax_total},
		ins_cost = #{ins_cost},
		artist_cost = #{artist_cost},
		tutition_amount = #{tutition_amount},
		real_payment = #{real_payment}
		WHERE tax_id = #{tax_id}
	</update>
	
	
	
	<insert id="tax_insert">
		INSERT INTO earner_tax (${param_name})
		VALUES (#{param_value})
		RETURNING tax_id
	</insert>
	
	
	<update id="tax_update">
		UPDATE earner_tax
		SET ${param_name} = #{param_value}
		WHERE tax_id = #{tax_id}
	</update>
	
	
	
	<select id="get_tax_one" resultType="com.douzone.entity.TaxInfoVO">
		SELECT e.worker_id,
		e.earner_code, e.is_tuition, e.deduction_amount, e.is_artist,
		e.ins_reduce,
		et.tax_id, et.tax_rate, et.ins_rate, et.total_payment,
		et.accrual_ym,
		et.payment_ym, et.payment_date
		FROM earner e
		INNER JOIN
		earner_tax et ON e.worker_id = et.worker_id AND e.earner_code =
		et.earner_code
		WHERE et.tax_id = #{tax_id}
	</select>
</mapper>



	