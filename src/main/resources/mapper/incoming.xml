<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
           "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douzone.DAO.IncomingDAO">
<!--  사업소득자등록-->
	<select id="초기화면" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select 
			코드, 소득자명, 주민번호, 소득구분코드, 소득구분명
		from
			earner<!--  e  left join codes c on e.div_code=c.div_code -->
		where
			worker_id=#{worker_id}
	</select>
	<select id="코드 클릭" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select 
			소득자정보
		from
			earner	
		where
			earner_code = #{param1} and worker_id #{worker_id}
	</select>
	<select id="소득자등록" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		insert into 
			earner(worker_id, 코드, 소득자명, 주민번호(null), 소득구분, 내/외국인) 
		values
			(#{worker_id}, #{param1},#{param2},#{param3},#{param4}, #{param5})
	</select>
	<select id="소득자정보등록" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		update 
			earner
		set 
			거주구분=#{param1},
			내/외국인=#{param1},
			소득구분=#{param1},
			주민번호=#{param1},
			집코드=#{param1},
			기본주소=#{param1},
			상세주소=#{param1},
			저나번호1=#{param1},
			저나번호1=#{param1},
			저나번호1=#{param1},
			저나번호1=#{param1},
			저나번호1=#{param1},
			저나번호1=#{param1},
			이메일1=#{param1},
			이메일2=#{param1},
			학자금여부=#{param1},
			학자금액=#{param1},
			비고=#{param1},
			소득자명=#{param1},
			소득구분=#{param1},
			예술인여부=#{param1},
			예술인유형=#{param1},
		where
			earner_code=#{param1} and worker_id=#{worker_id}
	</select>
<!-- 소득자료입력 -->
	<select id="지급년월조회" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select
			소득자명, 주민번호, 소득구분
		from 
			earner
		where
			accural_ym = #{param1} and worker_id=#{worker_id} and earner_code = #{param2}
	</select>
	<select id="소득자코드도움" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select
			코드, 소득자명, 내/외, 주민번호, 소득구분명, 구분코드
		from 
			earner
		where
			worker_id=#{worker_id} and earner_code like #{param1} or earner_name like #{param1}
			or div_name like #{param1}
	</select>
	<select id="소득자클릭" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select
			세금_아이디,귀속년월, 지급일, 지급총액, 세율
		from 
			earner e left join earner_tax t on e.earner_code=t.earner_code
		where
			payment_ym = #{param1} and worker_id=#{worker_id}
	</select>
	<select id="소득자코드도움선택" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select
			코드, 소득자명, 주민번호, 소득구분명, 구분코드
		from 
			earner
		where
			worker_id=#{worker_id}
	</select>
	<select id="세금정보등록" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		insert into
			earner_tax (worker_id, earner_code)
		values
			#{param1}, #{param2}
		<!-- <selectKey keyProperty="earnerseq" resultType="String"
			order="BEFORE">
			SELECT earner_no_seq.NEXTVAL AS earnerseq FROM DUAL
		</selectKey> == auto increase -->
	</select>
	<select id="세금정보수정" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		update earner_tax set
			소득자 코드, 세율, 지급총액, 소득세, 지방소득세, 세액계, 
			차인지급액, 지급년월, 지급일, 귀속년월, 예술인경비, 고용보험료
		=
			#{param}
		where
			tax_id=#{tax_id}
	</select>
<!-- 사업소득조회 -->
	<select id="소득자별조회" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select 
			t.tax_id, e.earner_name, e.personal_no, e.div_code, t.accrual_ym, t.payment_ym, 
			t.payment_date, t.total_payment, t.tax_rate, t.tuition_amout, t.tax_income, t.tax_local, 
			t.artist_cost, t.ins_cost, t.real_payment
		from 
			earner e left join earner_tax t 
			on e.earner_code=t.earner_code 
		where 
			e.worker_id=#{worker_id} 
			and ${read_by} between#{start_date} and #{end_date}
			and e.${code_name} like concat('%',#{code_value},'%') 
		order by 
			#{order_by};
	</select>
	<select id="소득구분별조회" parameterType="java.util.Map"
		resultType="com.douzone.entity.IncomingVO">
		select 
			t.tax_id, e.div_code, e.earner_name, e.personal_no, e.is_native, count(*), 
			sum(t.total_payment), t.tax_rate, sum(t.tax_income), sum(t.tax_local), sum(t.artist_cost),
			sum(t.ins_cost), sum(t.real_payment)
		from 
			earner e left join earner_tax t 
			on e.earner_code=t.earner_code
		where 
			e.worker_id=#{worker_id} 
			and ${read_by} between#{start_date} and #{end_date}
			and e.${code_name} like concat('%',#{code_value},'%') 
		group by
			#{tax_rate}, #{earner_code}
		order by 
			#{order_by};
	</select>
<!-- 	<insert id="regist" parameterType="java.util.Map">
		<selectKey keyProperty="earnerseq" resultType="String"
			order="BEFORE">
			SELECT earner_no_seq.NEXTVAL AS earnerseq FROM DUAL
		</selectKey>
		insert into earner(earner_no, worker_id, corp_code, earn_div_code,
		earn_code,
		resi_div, nation_div, earner_name, ssn1, ssn2, address,
		address_detail, cable_phone1,
		cell_phone1, email_1, st_loan_yn,
		st_loan_price, etc, )
		values(#{earnerseq}, #{param1},#{param2},#{param3})
	</insert> -->
<!-- 	<select id="searchearner" parameterType="java.util.Map"
		resultType="java.util.Map">
		select *
		from earner where earner_no in (
		<foreach collection="map" index="index" item="earner_no" separator=",">
			CAST(#{earner_no} AS INTEGER)
		</foreach>
		)
		ORDER BY earner_no
	</select> -->

	<select id="test1" parameterType="java.util.Map"
		resultType="java.util.Map">
		select e.earner_no, e.worker_id, test1, test2
		from earner e
		inner join test t on e.earner_no = t.earner_no
	</select>

</mapper>